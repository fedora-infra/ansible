########################################
# Handlers for restarting services
#
---
- name: Reload systemd
  ansible.builtin.command: systemctl daemon-reload

- name: Restart apache
  ansible.builtin.command: /usr/local/bin/conditional-restart.sh httpd httpd

- name: Reload apache
  action: service name=httpd state=reloaded

- name: Restart collectd
  action: service name=collectd state=restarted

- name: Restart crond
  action: service name=crond state=restarted

- name: Restart fedmsg-gateway
  ansible.builtin.command: /usr/local/bin/conditional-restart.sh fedmsg-gateway

- name: Restart fedmsg-hub
  ansible.builtin.command: /usr/local/bin/conditional-restart.sh {{ item }}
  with_items:
  - fedmsg-hub
  - fedmsg-hub-3

- name: Restart fedmsg-hub-3
  ansible.builtin.command: /usr/local/bin/conditional-restart.sh {{ item }}
  with_items:
  - fedmsg-hub
  - fedmsg-hub-3

- name: Restart fedmsg-irc
  ansible.builtin.command: /usr/local/bin/conditional-restart.sh fedmsg-irc

- name: Restart fedmsg-relay
  ansible.builtin.command: /usr/local/bin/conditional-restart.sh fedmsg-relay

- name: Restart fm-consumer@koji_sync_listener
  action: service name=fm-consumer@koji_sync_listener state=restarted enabled=yes

- name: Reload httpd
  ansible.builtin.command: /usr/local/bin/conditional-reload.sh httpd httpd

- name: Restart iptables
  action: service name=iptables state=restarted

- name: Restart ip6tables
  action: service name=ip6tables state=restarted

- name: Restart libvirtd
  action: service name=libvirtd state=restarted

- name: Restart virtnetworkd
  action: service name=virtnetworkd state=restarted

- name: Restart libvirtd.socket
  action: service name=libvirtd.socket state=stopped
  notify: Restart libvirtd

- name: Restart mailman
  action: service name=mailman state=restarted

- name: Restart named
  action: service name=named state=restarted

- name: Restart ntpd
  action: service name=ntpd state=restarted

- name: Restart sshd
  action: service name=sshd state=restarted

- name: Restart openvpn (Fedora)
  when: ansible_distribution == "Fedora"
  action: service name=openvpn-client@openvpn state=restarted
  # notify:
  # - Fix openvpn routing

- name: Restart openvpn (RHEL7+)
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version|int >= 7
  action: service name=openvpn-client@openvpn state=restarted
  # notify:
  # - Fix openvpn routing

- name: Fix openvpn routing
  action: shell /etc/openvpn/fix-routes.sh

- name: Restart xinetd
  action: service name=xinetd state=restarted
  when: not inventory_hostname.startswith('proxy')

- name: Restart netapproute
  action: command /etc/sysconfig/network-scripts/ifup-routes eth1

- name: Restart network
  action: service name=network state=restarted

- name: Rebuild postfix transport
  ansible.builtin.command: /usr/sbin/postmap /etc/postfix/transport

- name: Rebuild postfix bysender
  ansible.builtin.command: /usr/sbin/postmap /etc/postfix/bysender

- name: Rebuild postfix tls_policy
  ansible.builtin.command: /usr/sbin/postmap /etc/postfix/tls_policy

- name: Restart postfix
  service: name=postfix state=restarted

- name: Reload proxyhttpd
  ansible.builtin.command: /usr/local/bin/proxy-conditional-reload.sh httpd httpd

- name: Run rkhunter
  ansible.builtin.command: rkhunter --propupd

- name: Restart moksha-hub
  service: name=moksha-hub state=restarted

- name: Restart dhcpd
  service: name=dhcpd state=restarted

- name: Restart memcached
  service: name=memcached state=restarted

- name: Restart nagios
  ansible.builtin.shell: nagios -v /etc/nagios/nagios.cfg && systemctl restart nagios

- name: Restart bridge
  ansible.builtin.shell: /usr/lib/systemd/systemd-sysctl --prefix=/proc/sys/net/bridge

- name: Reload libvirtd
  service: name=libvirtd state=reloaded
  ignore_errors: true
  when: ansible_virtualization_role == 'host'

- name: Restart pagure_ev
  service: name=pagure_ev state=restarted

- name: Update ca-trust
  ansible.builtin.command: /usr/bin/update-ca-trust

- name: Restart stunnel
  service: name=stunnel state=restarted

- name: Restart mirrorlist-server
  service: name=mirrorlist-server state=restarted

- name: Restart NetworkManager
  service: name=NetworkManager state=restarted

- name: Reload NetworkManager-connections
  ansible.builtin.command: nmcli c reload

- name: Restart basset-worker
  service: name=basset-worker state=restarted

- name: Apply interface-changes
  ansible.builtin.command: nmcli con up {{ item.split()[1] }}
  async: 1
  poll: 0
  loop: "{{ if_uuid.stdout_lines|flatten(levels=1) }}"
  when: item.split()[1] not in ansible_ifcfg_disabled

- name: Flush journald tmpfiles to persistent store
  ansible.builtin.command: pkill -f -USR1 systemd-journald

- name: Restart idmapd
  service: name=nfs-idmapd state=restarted

- name: Restart buildmaster
  service: name=buildmaster state=restarted

- name: Restart rabbitmq
  systemd:
    name: rabbitmq-server
    state: restarted
    daemon_reload: yes

- name: Restart chronyd
  service: name=chronyd state=restarted

- name: Restart kojira
  systemd:
    name: kojira
    state: restarted

- name: Restart haveged
  service: name=haveged state=restarted

- name: Restart obs-signd
  service: name=signd state=restarted

- name: Restart swap.swap
  service: name="swap.swap" state=restarted

- name: Restart varnish
  service: name=varnish state=restarted

- name: Reload varnish
  service: name=varnish state=reload

- name: Restart systemd-oomd
  service: name=systemd-oomd state=reload

- name: Restart debuginfod
  service: name=debuginfod state=restarted
