# create a new koji hub server system
# NOTE: should be used with --limit most of the time
# NOTE: most of these vars_path come from group_vars/koji-hub or from hostvars

---
- import_playbook: "/srv/web/infra/ansible/playbooks/include/virt-create.yml"
  vars:
    myhosts: "koji_stg:koji:koji_riscv"

# Once the instance exists, configure it.

- name: Make koji_hub server system
  hosts: koji_stg:koji:koji_riscv
  user: root
  gather_facts: true

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  pre_tasks:
    - include_vars: dir=/srv/web/infra/ansible/vars/all/ ignore_files=README
      tags: always
    - import_tasks: "{{ tasks_path }}/yumrepos.yml"

  roles:
  - base
  - rkhunter
  - nagios_client
  - zabbix/zabbix_agent
  - hosts
  - ipa/client
  - collectd/base
  - apache
  - role: keytab/service
    service: kojira
    host: "koji{{env_suffix}}.fedoraproject.org"
    when: env != 'secondary'
  - role: keytab/service
    service: kojira
    host: "riscv-koji{{env_suffix}}.fedoraproject.org"
    when: env == 'secondary'
  - role: keytab/service
    service: koji-gc
    owner_user: apache
    host: "koji{{env_suffix}}.fedoraproject.org"
    when: env != 'secondary'
  - role: keytab/service
    service: koji-gc
    owner_user: apache
    host: "riscv-koji{{env_suffix}}.fedoraproject.org"
    when: env == 'secondary'
  - koji_hub
  - role: keytab/service
    service: HTTP
    owner_user: apache
    host: "koji{{env_suffix}}.fedoraproject.org"
    when: env != 'secondary'
  - role: keytab/service
    service: HTTP
    owner_user: apache
    host: "riscv-koji{{env_suffix}}.fedoraproject.org"
    when: env == 'secondary'
  - {role: nfs/server, when: env == "staging"}

    # production nfs mounts from netapp
  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji'
    nfs_src_dir: 'fedora_koji'
    when: env == 'production' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji/koji/vol/fedora_koji_archive00'
    nfs_src_dir: 'fedora_koji_archive00'
    when: env == 'production' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji/koji/vol/fedora_koji_archive01'
    nfs_src_dir: 'fedora_koji_archive01'
    when: env == 'production' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji/koji/vol/fedora_koji_archive02'
    nfs_src_dir: 'fedora_koji_archive02'
    when: env == 'production' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji/koji/vol/fedora_koji_archive03'
    nfs_src_dir: 'fedora_koji_archive03'
    when: env == 'production' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji/koji/vol/fedora_koji_archive04'
    nfs_src_dir: 'fedora_koji_archive04'
    when: env == 'production' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji/koji/vol/fedora_koji_archive05'
    nfs_src_dir: 'fedora_koji_archive05'
    when: env == 'production' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji/koji/vol/fedora_koji_archive06'
    nfs_src_dir: 'fedora_koji_archive06'
    when: env == 'production' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/koji/ostree'
    nfs_src_dir: 'fedora_ostree_content/ostree'
    mount_stg: true
    when: env == 'production' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/koji/compose/ostree'
    mount_stg: true
    nfs_src_dir: 'fedora_ostree_content/compose/ostree'
    when: env == 'production' and inventory_hostname.startswith('koji')

    # In staging, we mount fedora_koji as read only (see nfs_mount_opts)
  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji_prod'
    nfs_src_dir: 'fedora_koji'
    when: env == 'staging' and inventory_hostname.startswith('koji')

  - role: nfs/client
    mnt_dir: '/mnt/fedora_koji/'
    mount_stg: true
    nfs_src_dir: 'fedora_riscv_koji'
    when: inventory_hostname.startswith('riscv')

  - role: nfs/client
    mnt_dir: '/mnt/koji/ostree'
    nfs_src_dir: 'fedora_ostree_content/ostree'
    mount_stg: true
    when: env == 'staging'

  - role: nfs/client
    mnt_dir: '/mnt/koji/compose/ostree'
    mount_stg: true
    nfs_src_dir: 'fedora_ostree_content/compose/ostree'
    when: env == 'staging'

  - sudo
  - role: rabbit/user
    user_name: "koji{{ env_suffix }}"
    user_sent_topics: ^org\.fedoraproject\.{{ env_short }}\.buildsys\..*
    when: koji_instance != 'secondary'

  - role: rabbit/user
    user_name: "riscv-koji{{ env_suffix }}"
    user_sent_topics: ^org\.fedoraproject\.{{ env_short }}\.buildsys\..*
    when: koji_instance == 'secondary'

  tasks:
  - import_tasks: "{{ tasks_path }}/motd.yml"

  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"

- name: Configure sshfs target on koji01
  hosts: koji01.iad2.fedoraproject.org:koji01.stg.iad2.fedoraproject.org
  tags:
    - sshfs
  user: root
  gather_facts: true

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  tasks:
  - name: Put public sshfs key in place
    authorized_key: user="root"
                    key="{{ lookup('file', '{{ private }}/files/releng/sshkeys/primary-s390x-sshfs' + '-staging.pub' if env == 'staging' else '{{ private }}/files/releng/sshkeys/primary-s390x-sshfs.pub') }}"
                    state=present
                    key_options='command="internal-sftp",from="{{ '10.16.0.28,10.16.0.26,10.16.0.27,10.1.102.21,10.1.102.22,10.1.102.23' }}",restrict'
    tags:
    - sshfs

  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"
