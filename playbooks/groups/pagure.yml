- import_playbook: "/srv/web/infra/ansible/playbooks/include/virt-create.yml"
  vars:
    myhosts: "pagure:pagure_stg"

- name: make the boxen be real for real
  hosts: pagure:pagure_stg
  user: root
  gather_facts: True

  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  roles:
  - base
  - rkhunter
  - nagios_client
  - zabbix/zabbix_agent
  - hosts
  - openvpn/client
  - ipa/client
  - sudo
  - collectd/base
  - postgresql_server

  pre_tasks:
  - import_tasks: "{{ tasks_path }}/yumrepos.yml"

  tasks:
  - import_tasks: "{{ tasks_path }}/motd.yml"

  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"

- name: deploy pagure itself
  hosts: pagure:pagure_stg
  user: root
  gather_facts: True

  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - "{{ vars_path }}/{{ ansible_distribution }}.yml"

  roles:

  #
  # use letsencrypt to get ssl certs
  #
  - role: letsencrypt
    site_name: "stg.pagure.io"
    certbot_bundlehost: pagure-stg01.fedoraproject.org
    server_aliases:
    - stg.pagure.io
    - docs.stg.pagure.org
    - releases.stg.pagure.org
    - stg.pagure.org
    tags:
    - pagure.io
    when: env == "staging"

  - role: letsencrypt
    site_name: "pagure.io"
    certbot_bundlehost: pagure02.fedoraproject.org
    server_aliases:
    - docs.pagure.org
    - lists.pagure.io
    - pagure.org
    - releases.pagure.org
    - www.pagure.io
    tags:
    - pagure.io
    when: env != "staging"

  - pagure

  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"
