# This playbook is used to rebuild staging Koschei database.
# Useful to be ran after synchronization of staging Koji DB
# with production, which breaks Koschei - old builds from before sync
# have conflicting IDs with post-sync builds.
#
# In future, this playbook may be extended to sync content from
# production Koschei database dump, but this is not needed for now.

---
- name: Sync staging Koschei with production
  hosts: os_control_stg[0]
  user: root
  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
    - /srv/web/infra/ansible/roles/openshift-apps/koschei/vars/main.yml
    - /srv/web/infra/ansible/roles/openshift-apps/koschei/vars/{{ env }}.yml
  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"

  tasks:
  - name: Delete all jobs
    shell: oc -n koschei delete job --all

  - name: Pause all deployments
    shell: oc -n koschei rollout pause deploy

  - name: Delete all replica sets
    shell: oc -n koschei delete rs --all

  - name: Delete all pods
    shell: oc -n koschei delete pod --all

  - name: Drop koschei database
    postgresql_db: name=koschei state=absent
    become: yes
    become_user: postgres
    delegate_to: "{{ koschei_pgsql_hostname }}"

  - name: Create empty koschei database
    postgresql_db: name=koschei owner=koscheiadmin
    become: yes
    become_user: postgres
    delegate_to: "{{ koschei_pgsql_hostname }}"

  - name: Populate koschei database with schema and initial data
    include_role: name=openshift-apps/koschei/job
    vars:
      job_app: "{{ app }}"
      job_name: db-create
      job_command: "koschei-admin create-db && koschei-admin create-collection f41 --display-name 'Fedora Rawhide' --target f41 --bugzilla-product Fedora --bugzilla-version rawhide && koschei-admin create-group php"

  - name: Resume all deployments
    shell: oc -n koschei rollout resume deploy
