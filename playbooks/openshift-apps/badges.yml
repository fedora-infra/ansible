#
# Badges (fedbadges & Tahrir)
#

---
- name: setup the database
  hosts: db01.iad2.fedoraproject.org:db01.stg.iad2.fedoraproject.org
  gather_facts: no
  become: yes
  become_user: postgres
  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
    - /srv/web/infra/ansible/vars/apps/badges.yml

  tasks:
    - name: DB user
      postgresql_user:
        name: "{{ tahrirDBUser }}"
        password: "{{ (env == 'production')|ternary(tahrirDBPassword, tahrirstgDBPassword) }}"
    - name: Database creation
      postgresql_db:
        name: "{{ badges_db_name }}"
        owner: "{{ tahrirDBUser }}"
        encoding: UTF-8

- name: give access to the datanommer DB
  hosts: datanommer_dbserver:datanommer_dbserver_stg
  gather_facts: no
  become: yes
  become_user: postgres
  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
    - /srv/web/infra/ansible/vars/apps/badges.yml

  tasks:
    - name: DB user
      postgresql_user:
        name: "{{ tahrirDBUser }}"
        password: "{{ (env == 'production')|ternary(tahrirDBPassword, tahrirstgDBPassword) }}"
    - name: grant the db user read only access to datanommer2
      postgresql_privs:
        database: datanommer2
        privs: SELECT
        objs: ALL_IN_SCHEMA
        roles: "{{ tahrirDBUser }}"

- name: make the app be real
  hosts: os_control_stg:os_control
  user: root
  gather_facts: false

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
    - /srv/web/infra/ansible/vars/apps/badges.yml

  roles:
    - role: rabbit/user
      username: "tahrir{{ env_suffix }}"
      sent_topics: ^org\.fedoraproject\.{{ env_short }}\.badges\..*
      tags:
        - config
        - fedora-messaging
        - rabbitmq_cluster
    - role: rabbit/queue
      username: "fedbadges{{ env_suffix }}"
      queue_name: "fedbadges{{ env_suffix }}"
      routing_keys:
      # The badges queue is subscribed to everything
        - "#"
      thresholds:
        warning: 20000
        critical: 25000
      # It sends a message when a badge is awarded
      sent_topics: ^org\.fedoraproject\.{{ env_short }}\.badges\..*
      tags:
        - config
        - fedora-messaging
        - rabbitmq_cluster

    - role: openshift/project
      app: badges
      description: "Badges"
      appowners:
        - abompard
        - nphilipp
        - ryanlerch
      tags:
        - apply-appowners

    - role: openshift/object
      app: badges
      file: imagestream.yml
      objectname: imagestream.yml

    - role: openshift/object
      app: badges
      template: buildconfig.yml
      objectname: buildconfig.yml

    - role: openshift/object
      app: badges
      template: secrets.yml
      objectname: secrets.yml

    - role: openshift/object
      app: badges
      template: configmap.yml
      objectname: configmap.yml

    - role: openshift/object
      app: badges
      file: service.yml
      objectname: service.yml

    - role: openshift/object
      app: badges
      file: storage.yml
      objectname: storage.yml

    # Routes
    - role: openshift/route
      app: badges
      routename: frontend
      host: "badges{{ env_suffix }}.fedoraproject.org"
      servicename: frontend
      serviceport: web
      annotations:
        haproxy.router.openshift.io/timeout: 5m
    - role: openshift/route
      app: badges
      routename: frontend-openshift
      host: "badges.apps.ocp{{ env_suffix }}.fedoraproject.org"
      servicename: frontend
      serviceport: web
      annotations:
        haproxy.router.openshift.io/timeout: 5m

    # Fedora Messaging
    - role: openshift/secret-file
      app: badges
      secret_name: fedora-messaging-ca
      key: cacert.pem
      privatefile: "rabbitmq/{{env}}/pki/ca.crt"
    - role: openshift/secret-file
      app: badges
      secret_name: fedora-messaging-crt
      key: fedbadges-cert.pem
      privatefile: "rabbitmq/{{env}}/pki/issued/fedbadges{{env_suffix}}.crt"
    - role: openshift/secret-file
      app: badges
      secret_name: fedora-messaging-key
      key: fedbadges-key.pem
      privatefile: "rabbitmq/{{env}}/pki/private/fedbadges{{env_suffix}}.key"

    - role: openshift/secret-file
      app: badges
      secret_name: tahrir-fedora-messaging-crt
      key: tahrir-cert.pem
      privatefile: "rabbitmq/{{env}}/pki/issued/tahrir{{env_suffix}}.crt"
    - role: openshift/secret-file
      app: badges
      secret_name: tahrir-fedora-messaging-key
      key: tahrir-key.pem
      privatefile: "rabbitmq/{{env}}/pki/private/tahrir{{env_suffix}}.key"

    # FASJSON access
    - role: openshift/ipa-client
      app: badges
    - role: openshift/keytab
      app: badges
      key: fedbadges.keytab
      secret_name: fedbadges-keytab
      service: fedbadges

    # Deployment config
    - role: openshift/object
      app: badges
      template: deploymentconfig.yml
      objectname: deploymentconfig.yml

    # Cron jobs
    - role: openshift/object
      app: badges
      template: cron-award.yml
      objectname: cron-award.yml
    - role: openshift/object
      app: badges
      template: cron-update-rules.yml
      objectname: cron-update-rules.yml

    - role: openshift/start-build
      app: badges
      buildname: "{{ item }}"
      loop:
        - fedbadges
        - tahrir
      tags:
      - never
      - build

    - role: openshift/rollout
      app: badges
      dcname: "{{ item }}"
      loop:
        - fedbadges
        - tahrir
      tags:
      - never
      - rollout
