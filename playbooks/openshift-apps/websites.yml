- name: make the app be real
  hosts: os_control[0]:os_control_stg[0]
  user: root
  gather_facts: False
  vars:
    ssh_key_path: "{{ private }}/files/websites/id_rsa_web_trans_{{ env_short }}"
  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  roles:
  - role: openshift/project
    app: websites
    description: Fedora websites building
    appowners:
    - codeblock
    - ryanlerch
    - darknao

  - role: openshift/object
    app: websites
    file: pvc.yml
    objectname: pvc.yml

  - role: openshift/imagestream
    app: websites
    imagename: builder

  - role: openshift/object
    app: websites
    template: buildconfig.yml
    objectname: buildconfig.yml

  - role: openshift/start-build
    app: websites
    buildname: websites-build
    objectname: websites-build

  - role: openshift/object
    app: websites
    template: configmap.yml
    objectname: configmap.yml

  - role: openshift/object
    app: websites
    template: cm-updatepot.yml
    objectname: cm-updatepot.yml

  - role: openshift/object
    app: websites
    template: gitconfig.yml
    objectname: gitconfig.yml

  - role: openshift/object
    app: websites
    template: sshconfig.yml
    objectname: sshconfig.yml

  - role: openshift/object
    app: websites
    template: cron.yml
    objectname: cron.yml

  - role: openshift/object
    app: websites
    template: cron-updatepot.yml
    objectname: cron-updatepot.yml

  - role: openshift/imagestream
    app: websites
    imagename: fedora-websites

  - role: openshift/object
    app: websites
    template: fedora-websites-bc.yml
    objectname: fedora-websites-bc.yml

  - role: openshift/start-build
    app: websites
    buildname: fedora-websites
    objectname: fedora-websites

  - role: openshift/object
    app: websites
    template: fedora-websites-cron.yml
    objectname: fedora-websites-cron.yml

  # New websites 3.0
  # STAGING ONLY
  - role: openshift/object
    app: websites
    file: obc.yml
    objectname: obc.yml
    when: env == "staging"

  - name: Get s3 secret from openshift
    community.okd.k8s:
      api_version: v1
      kind: Secret
      namespace: websites
      name: fedoraproject-s3
    register: s3_secret
    when: env == "staging"

  - name: Get s3 config from openshift
    community.okd.k8s:
      api_version: v1
      kind: ConfigMap
      namespace: websites
      name: fedoraproject-s3
    register: s3_config
    when: env == "staging"

  # S3 credentials that will be used by proxies (role fedora-web/main)
  - name: "Save s3 credentials to {{ private }}"
    copy:
      dest: "{{ private }}/files/websites/s3_fedoraproject_{{ env_short }}.yml"
      content: |
        fedoraproject_s3_access_key: "{{ s3_secret.result.data['AWS_SECRET_ACCESS_KEY']|b64decode }}"
        fedoraproject_s3_access_key_id: "{{ s3_secret.result.data['AWS_ACCESS_KEY_ID']|b64decode }}"
        fedoraproject_s3_bucket_name: "{{ s3_config.result.data['BUCKET_NAME'] }}"
      mode: 0600
    delegate_to: localhost
    when: env == "staging"
