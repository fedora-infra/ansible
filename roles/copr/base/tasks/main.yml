---
# tasklist for setting up copr
# This is the base set of files needed for copr


# again to late to do it here
# - import_tasks: "{{ tasks_path }}/cloud_setup_basic.yml"
# already included into the `base` role
#- import_tasks: "{{ tasks_path }}/postfix_basic.yml"

# To late to do it here (
#- name: setup correct hostname for copr machine
#  hostname: name="{{ copr_hostbase }}.cloud.fedoraproject.org"
#  #  hostname: name="{{ hostbase|regex_replace('.*-$', '')}}.cloud.fedoraproject.org"
#  tags:
#  - config

- name: enable epel for non-fedora hosts
  package: state=present pkg="epel-release"
  when: ansible_distribution != 'Fedora'

- name: copy .forward file
  copy: src="{{ _forward_src }}" dest="/root/.forward" owner=root group=root
  tags:
  - config

- name: deploy /etc/hosts file
  copy: src="hosts" dest=/etc/ owner=root group=root mode=644
  tags:
  - config

- name: configure crond
  copy: src=sysconfig.crond dest=/etc/sysconfig/crond
  notify: restart crond

- name: install anacrontab
  package: name=cronie-anacron state=present

- name: configure anacrond to not send mails to root user
  lineinfile: dest=/etc/anacrontab
              backup=yes
              state=present
              line='MAILTO=praiskup@fedoraproject.org'
              regexp="^MAILTO"
  notify: restart crond

- name: install copr-selinux
  dnf: state=latest pkg=copr-selinux
  tags:
  - packages

- name: install node_exporter
  dnf: state=present pkg=golang-github-prometheus-node-exporter
  tags:
  - packages

- name: install dev helper packages
  dnf:
    state: present
    pkg:
      - "bash-completion"
      - "screen"
      - "tmux"
  tags:
  - packages

- name: install ethtool
  dnf: state=present pkg=ethtool
  tags:
  - packages

- name: check offloading
  shell: "ethtool -k eth0 | egrep -q 'tcp-segmentation-offload: on|generic-receive-offload: on|generic-segmentation-offload: on'"
  register: offloading
  failed_when: offloading.rc == 2
  changed_when: "1 != 1"
  check_mode: no

- name: disable offloading
  command: ethtool -K eth0 tso off gro off gso off
  when: offloading.rc == 0

- name: disable offloading (persitently)
  lineinfile: dest=/etc/sysconfig/network-scripts/ifcfg-eth0 backup=yes state=present line='ETHTOOL_OPTS="-K ${DEVICE}  tso off gro off gso off"'
  tags:
  - config

- name: make sure our resolv.conf is the one being used - set PEERDNS=no in /etc/sysconfig/network
  lineinfile: dest=/etc/sysconfig/network create=yes backup=yes state=present line='PEERDNS=no' regexp=^PEERDNS=
  tags:
  - config
  when: datacenter != "aws"

- name: setup ipv6 networking general
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-eth0
    backup: yes
    state: present
    line: "{{ item }}"
  with_items:
    - IPV6INIT=yes
    - IPV6_DEFROUTE=yes
    - IPV6_AUTOCONF=yes
  when: aws_ipv6_addr is defined
  tags: ipv6_config

- name: setup ipv6 address
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-eth0
    backup: yes
    state: present
    line: "IPV6ADDR={{ aws_ipv6_addr }}"
    regex: ^IPV6ADDR=
  when: aws_ipv6_addr is defined
  tags: ipv6_config

- name: restart node exporter
  service: state=restarted enabled=yes name=node_exporter

- name: install nrpe checks
  template: src=copr_nrpe.cfg
            dest=/etc/nrpe.d/copr_nrpe.cfg
  notify:
  - restart nrpe
  tags:
  - nagios_client
  - copr_cdn
  - copr_ping

# - name: enable and run logrotate service
#   service: name="logrotate" state=started
