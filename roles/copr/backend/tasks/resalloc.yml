---
- name: install packages needed by resalloc server
  dnf:
    state: present
    name:
    - genisoimage
    - libvirt-client
    - postgresql-server
    - python3-psycopg2
    - resalloc
    - resalloc-server
    - virt-install

- name: See if postgreSQL is initialized
  stat: path=/var/lib/pgsql/data/PG_VERSION
  register: postgres_initialized

- name: init postgresql
  shell: "postgresql-setup initdb"
  when: not postgres_initialized.stat.exists

- name: enable PostgreSQL service
  service: state=started enabled=yes name=postgresql

- name: Create PG user
  postgresql_user: name="resalloc"
  become: yes
  become_user: postgres

- name: Create db
  postgresql_db: name="resalloc" encoding='UTF-8' owner=resalloc
  become: yes
  become_user: postgres

- set_fact: provision_directory=/var/lib/resallocserver/provision
  tags:
  - provision_config

- name: setup provision directory
  include_tasks: setup_provisioning_environment.yml
  tags:
  - always
  vars:
    cloud_vars: true

- name: install .ansible.cfg for {{ provision_user }} user
  copy: src=ansible.cfg dest=/var/lib/resallocserver/.ansible.cfg
        owner=resalloc group=resalloc mode=600
  tags:
  - provision_config

- name: resalloc, sync resalloc provisioning files
  synchronize: src="resalloc_provision/" dest="/var/lib/resallocserver/resalloc_provision/"
  tags:
  - provision_config

- name: resalloc, scripts
  template: src="resalloc/{{ item }}" dest="/var/lib/resallocserver/resalloc_provision/"
            mode=755
  with_items:
  - vm-release
  tags:
  - provision_config

- name: resalloc, ssh directory
  file:
    path: /var/lib/resallocserver/.ssh
    state: directory
    mode: 0700
    owner: resalloc
    group: resalloc

- name: resalloc, copy backend ssh identity
  copy:
    src: "{{ private }}/files/copr/buildsys.priv"
    dest: /var/lib/resallocserver/.ssh/id_rsa
    owner: resalloc
    group: resalloc
    mode: 0600

- name: resalloc, ssh config file
  copy:
    src: "ssh_config"
    dest: /var/lib/resallocserver/.ssh/config
    owner: resalloc
    group: resalloc
    mode: 0600

- name: resalloc, server config
  template:
    src: "resalloc/{{ item }}"
    dest: "/etc/resallocserver/{{ item }}"
    mode: 0600
    owner: resalloc
    group: resalloc
  with_items:
  - server.yaml
  - pools.yaml
  tags:
  - provision_config
  - resalloc_config

- name: start/enable resalloc server
  service:
    name: resalloc
    state: started
    enabled: yes
  when: not services_disabled|bool

- name: install resalloc-aws scripts
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: 0755
    force: true
  with_items:
  - dest: /usr/bin/resalloc-aws-wait-for-ssh
    url: https://raw.githubusercontent.com/praiskup/wait-for-ssh/main/wait-for-ssh
  - dest: /usr/bin/resalloc-aws-new
    url: https://raw.githubusercontent.com/praiskup/resalloc-aws/main/bin/resalloc-aws-new
  - dest: /usr/bin/resalloc-aws-delete
    url: https://raw.githubusercontent.com/praiskup/resalloc-aws/main/bin/resalloc-aws-delete
  tags:
  - provision_config
  - provision_config_resalloc_aws

- name: f33 has outdated ansible community general plugins, use copr
  community.general.copr:
    state: enabled
    name: praiskup/ansible-collection-community-genral-f33
  when: ansible_distribution_major_version|int == 33 and ansible_distribution == 'Fedora'

- name: sometimes it is worth having the copr.py ansible plugin
  package: name=ansible-collection-community-general state=latest
