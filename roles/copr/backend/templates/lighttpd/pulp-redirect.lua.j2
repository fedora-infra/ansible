-- Redirect to Pulp so that old backend URLs still work

pulp_content_url = "{{ pulp_content_url }}"

-- SQLite claims to be 35% faster than reading blobs from filesystem
-- https://www.sqlite.org/fasterthanfs.html
-- Worth trying out once we hit a bottleneck for reading the file
file_with_redirects = "/var/lib/copr/pulp-redirect.txt"


function line_in_file(searched, file)
  -- Is searched line in a file?
  for line in io.lines(file) do
    if line == searched then
      return true
    end
  end
  return false
end


function string_split(str, separator)
  -- Split string into an array of strings.
  -- The separator must be a single character
  local i = 1
  local results = {}
  while true do
    local j = string.find(str, separator, i)
    if j then
      -- The `j` is an index of the separator and we want only the word before
      -- the separator
      j = j - 1
      local value = string.sub(str, i, j)
      table.insert(results, value)
      -- Start from where we ended but skip the separator
      i = j + 2
    else
      break
    end
  end
  return results
end


function redirect(url)
  lighty.header["Location"] = url
  return 301
end


function pulp_url(copr_path)
  if string.sub(copr_path, 1, 9) == "/results/" then
    copr_path = string.sub(copr_path, 10)
  end
  return pulp_content_url .. copr_path
end


function main()
  local uri = lighty.env["uri.path"]
  local split = string_split(uri, "/")
  if #(split) < 5 then
    return
  end

  local owner, project, chroot = split[3], split[4], split[5]
  if chroot == "srpm-builds" then
    return
  end

  local fullname = owner .. "/" .. project
  local colon = string.find(fullname, ":")
  if colon then
    fullname = string.sub(fullname, 0, colon - 1)
  end

  if not line_in_file(fullname, file_with_redirects) then
    return
  end

  return redirect(pulp_url(uri))
end


return main()
