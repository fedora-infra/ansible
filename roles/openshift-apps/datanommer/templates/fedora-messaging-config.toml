amqp_url = "amqps://datanommer:@rabbitmq{{ env_suffix }}.fedoraproject.org/%2Fpubsub"

# Just check if the queue exist, don't try to create it (the server does not allow it).
passive_declares = true

[tls]
ca_cert = "/etc/pki/fedora-messaging/cacert.pem"
keyfile = "/etc/pki/fedora-messaging/datanommer-key.pem"
certfile = "/etc/pki/fedora-messaging/datanommer-cert.pem"

[client_properties]
app = "datanommer"
app_url = "https://github.com/fedora-infra/datanommer"

[queues."datanommer{{ env_suffix }}"]
durable = true
auto_delete = false
exclusive = false
arguments = {}

[[bindings]]
queue = "datanommer{{ env_suffix }}"
exchange = "amq.topic"
routing_keys = ["#"]

[consumer_config]
datanommer_sqlalchemy_url = 'postgresql://{{ datanommerDBUser }}:{{ (env == 'production')|ternary(datanommerDBPassword, datanommer_stg_db_password) }}@{{ datanommer_db_hostname }}{{ env_suffix }}.iad2.fedoraproject.org/datanommer2'
alembic_ini = "/etc/fedora-messaging/alembic.ini"

[log_config]
version = 1
disable_existing_loggers = true
[log_config.formatters.simple]
format = "[%(asctime)s %(levelname)s %(name)s] %(message)s"
[log_config.handlers.console]
class = "logging.StreamHandler"
formatter = "simple"
stream = "ext://sys.stdout"
[log_config.loggers.fedora_messaging]
level = "INFO"
propagate = false
handlers = ["console"]
[log_config.root]
level = "WARNING"
handlers = ["console"]
