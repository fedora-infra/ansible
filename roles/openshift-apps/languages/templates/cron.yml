{% if env == "production" %}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: stats-33
spec:
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 2
  concurrencyPolicy: Forbid
  schedule: "0 2 * * *"
  startingDeadlineSeconds: 500
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            parent: "cron_stats"
        spec:
          volumes:
          - name: srpm-data
            persistentVolumeClaim:
              claimName: "languages-storage{{ '-stg' if env == 'staging' else '' }}"
          restartPolicy: Never
          initContainers:
          - name: clean-tmp
            image: "docker-registry.default.svc:5000/languages/builder:latest"
            imagePullPolicy: Always
            env:
            - name: RELEASEVER
              value: "33"
            - name: TMPDIR
              value: /src/results/f$(RELEASEVER)/tmp
            command: ["/bin/sh", "-c"]
            args:
            - >
              [ -d ${TMPDIR} ] && rm -Rf ${TMPDIR} ;
              mkdir -p ${TMPDIR}
            volumeMounts:
            - name: srpm-data
              readOnly: false
              mountPath: /src/results
          - name: extract
            image: "docker-registry.default.svc:5000/languages/builder:latest"
            imagePullPolicy: Always
            command:
            - ./build.py
            - "--results"
            - f$(RELEASEVER)
            env:
            - name: RELEASEVER
              value: "33"
            - name: DNF_CONF
              value: "dnf{{ '_stg' if env == 'staging' else '' }}_$(RELEASEVER).conf"
            - name: TMPDIR
              value: /src/results/f$(RELEASEVER)/tmp
            - name: THREAD_MAX_CONN
              value: "3"
            - name: THREAD_MAX_EXTR
              value: "3"
            - name: THREAD_MAX
              value: "8"
            volumeMounts:
            - name: srpm-data
              readOnly: false
              mountPath: /src/results
          containers:
          - name: stats
            image: "docker-registry.default.svc:5000/languages/builder:latest"
            imagePullPolicy: Always
            command: ["/bin/sh", "-c"]
            args:
            - >
              ./build_language_list.py --results f$(RELEASEVER) --refresh &&
              ./build_language_list.py --results f$(RELEASEVER) --analyzealllang &&
              ./build_tm.py --results f$(RELEASEVER) --compress &&
              ./build_stats.py --results f$(RELEASEVER)
            env:
            - name: RELEASEVER
              value: "33"
            - name: TMPDIR
              value: /src/results/f$(RELEASEVER)/tmp
            volumeMounts:
            - name: srpm-data
              readOnly: false
              mountPath: /src/results
---
{% endif %}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: stats-34
spec:
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 2
  concurrencyPolicy: Forbid
  schedule: "0 4 * * *"
  startingDeadlineSeconds: 500
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            parent: "cron_stats"
        spec:
          volumes:
          - name: srpm-data
            persistentVolumeClaim:
              claimName: "languages-storage{{ '-stg' if env == 'staging' else '' }}"
          restartPolicy: Never
          initContainers:
          - name: clean-tmp
            image: "docker-registry.default.svc:5000/languages/builder:latest"
            imagePullPolicy: Always
            env:
            - name: RELEASEVER
              value: "34"
            - name: TMPDIR
              value: /src/results/f$(RELEASEVER)/tmp
            command: ["/bin/sh", "-c"]
            args:
            - >
              [ -d ${TMPDIR} ] && rm -Rf ${TMPDIR} ;
              mkdir -p ${TMPDIR}
            volumeMounts:
            - name: srpm-data
              readOnly: false
              mountPath: /src/results
          - name: extract
            image: "docker-registry.default.svc:5000/languages/builder:latest"
            imagePullPolicy: Always
            command:
            - ./build.py
            - "--results"
            - f$(RELEASEVER)
            env:
            - name: RELEASEVER
              value: "34"
            - name: DNF_CONF
              value: "dnf{{ '_stg' if env == 'staging' else '' }}_$(RELEASEVER).conf"
            - name: TMPDIR
              value: /src/results/f$(RELEASEVER)/tmp
            - name: THREAD_MAX_CONN
              value: "3"
            - name: THREAD_MAX_EXTR
              value: "3"
            - name: THREAD_MAX
              value: "8"
            volumeMounts:
            - name: srpm-data
              readOnly: false
              mountPath: /src/results
          containers:
          - name: stats
            image: "docker-registry.default.svc:5000/languages/builder:latest"
            imagePullPolicy: Always
            command: ["/bin/sh", "-c"]
            args:
            - >
              ./build_language_list.py --results f$(RELEASEVER) --refresh &&
              ./build_language_list.py --results f$(RELEASEVER) --analyzealllang &&
              ./build_tm.py --results f$(RELEASEVER) --compress &&
              ./build_stats.py --results f$(RELEASEVER)
            env:
            - name: RELEASEVER
              value: "34"
            - name: TMPDIR
              value: /src/results/f$(RELEASEVER)/tmp
            volumeMounts:
            - name: srpm-data
              readOnly: false
              mountPath: /src/results
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: build-website
spec:
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 2
  concurrencyPolicy: Forbid
  schedule: "0 */2 * * *"
  startingDeadlineSeconds: 500
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            parent: "cron_website"
        spec:
          volumes:
          - name: srpm-data
            persistentVolumeClaim:
              claimName: "languages-storage{{ '-stg' if env == 'staging' else '' }}"
          restartPolicy: Never
          containers:
          - name: stats
            image: "docker-registry.default.svc:5000/languages/builder:latest"
            imagePullPolicy: Always
            command: ["/bin/sh", "-c"]
            args:
            - >
              ./build_website.py -v --results f33 ;
              ./build_website.py -v --results f34 ;
              cd website && hugo -D --baseURL https://languages{{ env_suffix }}.fedoraproject.org &&
              cp -R public /src/results/
            volumeMounts:
            - name: srpm-data
              readOnly: false
              mountPath: /src/results
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: stats-website
spec:
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 2
  concurrencyPolicy: Forbid
  schedule: "0 * * * *"
  startingDeadlineSeconds: 500
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            parent: "cron_website_stats"
        spec:
          restartPolicy: Never
          containers:
          - image: allinurl/goaccess
            name: goaccess
            imagePullPolicy: IfNotPresent
            args:
            - "-a"
            - "--log-format=COMBINED"
            - "--log-file=/html/logs/access.log"
            - "--output=/html/public/stats.html"
            ports:
            volumeMounts:
            - name: nginx-data
              mountPath: /html
          volumes:
          - name: nginx-data
            persistentVolumeClaim:
              claimName: "languages-storage{{ '-stg' if env == 'staging' else '' }}"
