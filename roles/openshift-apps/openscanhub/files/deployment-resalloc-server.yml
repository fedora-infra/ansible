apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: "false"
    deployment.kubernetes.io/revision: "2"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"resalloc-server:staging","namespace":"openscanhub"},"fieldPath":"spec.template.spec.containers[?(@.name==\"resalloc-server\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2024-03-11T09:30:15Z"
  generation: 6
  labels:
    app: resalloc-server
    app.kubernetes.io/component: resalloc-server
    app.kubernetes.io/instance: resalloc-server
    app.kubernetes.io/name: resalloc-server
    app.kubernetes.io/part-of: openscanhub
    app.openshift.io/runtime: python
    app.openshift.io/runtime-namespace: openscanhub
  name: resalloc-server
  namespace: openscanhub
  resourceVersion: "776292887"
  uid: c66b473a-87e1-47bf-afbd-51ea8a13bbd3
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: resalloc-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        app: resalloc-server
        deployment: resalloc-server
    spec:
      containers:
      - image: quay.io/openscanhub-fedora-infra/resalloc-server:staging
        imagePullPolicy: Always
        name: resalloc-server
        ports:
        - containerPort: 49100
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /etc/resallocserver/server.yaml
            name: etc-resallocserver-server-configmap
            subPath: server.yaml
          - mountPath: /etc/resallocserver/pools.yaml
            name: etc-resallocserver-pools-configmap
            subPath: pools.yaml
          - mountPath: /var/lib/resallocserver/.aws/credentials
            name: aws-credentials-configmap
            subPath: credentials
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: etc-resallocserver-server-configmap
          configMap:
            name: etc-resallocserver-server-config
        - name: etc-resallocserver-pools-configmap
          configMap:
            name: etc-resallocserver-pools-config
        - name: aws-credentials-configmap
          configMap:
            name: aws-credentials-config
