#
### Crawler cron jobs
#
{% from "_macros.yml.j2" import common_volume_mounts, common_volumes, common_env, security_context with context %}
{% for cronjob in mirrormanager_cron_crawler %}
---
# Category: {{ cronjob.category }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: crawler-{{ cronjob.category|lower|replace(" ", "-") }}{{ cronjob.include_disabled | ternary('-all', '') }}
spec:
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  schedule: "{{ cronjob.schedule }}"
  startingDeadlineSeconds: 500
  suspend: {{ (env == "staging")|ternary("true", "false") }}
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: mirrormanager
              image: image-registry.openshift-image-registry.svc:5000/mirrormanager/mirrormanager2:latest
              command:
                - "/opt/app-root/bin/mm2_crawler"
                - "--threads"
                - "{{ cronjob.threads }}"
                - "--global-timeout"
                - "{{ cronjob.timeout }}"
{% if cronjob.host_timeout is defined %}
                - "--host-timeout"
                - "{{ cronjob.host_timeout }}"
{% endif %}
                - "--category"
                - "{{ cronjob.category }}"
                - "--{{ cronjob.include_disabled | ternary('include', 'exclude') }}-disabled"
                - "--no-fail"
                - "crawl"
              env:
                {{ common_env() | indent(4) }}
              volumeMounts:
                {{ common_volume_mounts() | indent(4) }}

          volumes:
            {{ common_volumes() | indent(4) }}
{% endfor %}
---
#
### Rotate logs
#
apiVersion: batch/v1
kind: CronJob
metadata:
  name: logrotate-crawler-logs
spec:
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  schedule: "56 23 * * *"
  startingDeadlineSeconds: 500
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: mirrormanager
              image: image-registry.openshift-image-registry.svc:5000/mirrormanager/mirrormanager2:latest
              command:
                - "logrotate"
                - "-v"
                - "--state"
                - "/var/log/mirrormanager/logrotate.state"
                - "/etc/mirrormanager/logrotate.conf"
              volumeMounts:
                - name: config
                  mountPath: "/etc/mirrormanager"
                  readOnly: true
                - name: logs
                  mountPath: "/var/log/mirrormanager"
          volumes:
            - name: config
              configMap:
                name: config
            - name: logs
              persistentVolumeClaim:
                claimName: logs
          {{ security_context() | indent(4) }}
