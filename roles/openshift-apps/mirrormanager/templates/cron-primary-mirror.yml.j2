### Primary mirror scanning cron jobs
#
{% from "_macros.yml.j2" import common_volume_mounts, common_volumes, common_env, security_context with context %}
{% for cronjob in mirrormanager_cron_primary_mirror %}
---
# Category: {{ cronjob.category }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: primary-mirror-{{ cronjob.category|lower|replace(" ", "-") }}
spec:
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  schedule: "{{ cronjob.schedule }}"
  startingDeadlineSeconds: 500
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: mirrormanager
              image: image-registry.openshift-image-registry.svc:5000/mirrormanager/mirrormanager2:latest
              command: ["bash", "/opt/scripts/primary-mirror-wrapper.sh", "{{ cronjob.category }}"]
              env:
                {{ common_env() | indent(4) }}
              volumeMounts:
                {{ common_volume_mounts(with_ssh=True) | indent(4) }}
                - name: mirror
                  mountPath: "/srv/pub"
                - name: mirror-archive
                  mountPath: "/srv/pub/archive"
{% if env == 'production' %}
                - name: codecs
                  mountPath: "/srv/codecs.fedoraproject.org"
{% endif %}
          volumes:
            {{ common_volumes(with_ssh=True) | indent(4) }}
            - name: mirror
              persistentVolumeClaim:
                claimName: primary-mirror
            - name: mirror-archive
              persistentVolumeClaim:
                claimName: primary-mirror-archive
{% if env == 'production' %}
            - name: codecs
              persistentVolumeClaim:
                claimName: codecs
{% endif %}
          {{ security_context() | indent(4) }}
{% endfor %}
