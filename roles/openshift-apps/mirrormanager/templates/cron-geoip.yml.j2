{% from "_macros.yml.j2" import security_context with context %}
---
# Download GeoIP database
apiVersion: batch/v1
kind: CronJob
metadata:
  name: download-geoip-db
spec:
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  schedule: "48 * * * *"
  startingDeadlineSeconds: 500
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: mirrormanager
            image: image-registry.openshift-image-registry.svc:5000/mirrormanager/mirrormanager2:latest
            command:
              - "curl"
              - "--create-dirs"
              - "--output-dir"
              - "/var/lib/mirrormanager/geoip"
              - "-O"
              - "--fail"
              - "https://infrastructure.fedoraproject.org/infra/bigfiles/geoip/GeoLite2-City.mmdb"
            volumeMounts:
              - name: var-lib
                mountPath: "/var/lib/mirrormanager"
          volumes:
            - name: var-lib
              persistentVolumeClaim:
                claimName: data
          {{ security_context() | indent(4) }}
---
# Set the mirrors location in the database
apiVersion: batch/v1
kind: CronJob
metadata:
  name: generate-mirrors-location
spec:
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  schedule: "50 20 * * *"
  startingDeadlineSeconds: 500
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: mirrormanager
            image: image-registry.openshift-image-registry.svc:5000/mirrormanager/mirrormanager2:latest
            command: ["mm2_generate-worldmap"]
            volumeMounts:
              - name: config
                mountPath: "/etc/mirrormanager"
              - name: var-lib
                mountPath: "/var/lib/mirrormanager"
          volumes:
            - name: config
              configMap:
                name: config
            - name: var-lib
              persistentVolumeClaim:
                claimName: data
          {{ security_context() | indent(4) }}
