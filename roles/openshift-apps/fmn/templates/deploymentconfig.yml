---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: frontend
  labels:
    app: fmn
spec:
  replicas: 1
  selector:
    app: fmn
    deploymentconfig: frontend
  strategy:
    type: Rolling
    activeDeadlineSeconds: 21600
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fmn
        deploymentconfig: frontend
    spec:
      containers:
        - name: frontend
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: httpdir-volume
              mountPath: /httpdir
          env:
            - name: APP_SCRIPT
              value: ".s2i/run-frontend.sh"

      volumes:
        - name: httpdir-volume
          emptyDir: {}
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - frontend
        from:
          kind: ImageStreamTag
          name: fmn:latest
    - type: ConfigChange
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: api
  labels:
    app: fmn
spec:
  replicas: 1
  selector:
    app: fmn
    deploymentconfig: api
  strategy:
    type: Rolling
    activeDeadlineSeconds: 21600
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fmn
        deploymentconfig: api
    spec:
      containers:
        - name: api
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: etc-fmn
              mountPath: "/etc/fmn"
              readOnly: true
            - name: rabbitmq-ca-volume
              mountPath: /etc/pki/rabbitmq/ca
              readOnly: true
            - name: rabbitmq-key-volume
              mountPath: /etc/pki/rabbitmq/key
              readOnly: true
            - name: rabbitmq-crt-volume
              mountPath: /etc/pki/rabbitmq/crt
              readOnly: true

          env:
            - name: APP_SCRIPT
              value: ".s2i/run-api.sh"
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: fmn
                  key: oidc-client-secret

      volumes:
        - name: etc-fmn
          configMap:
            name: fmn-config
        - name: rabbitmq-ca-volume
          mountPath: /etc/pki/rabbitmq/ca
          readOnly: true
        - name: rabbitmq-key-volume
          mountPath: /etc/pki/rabbitmq/key
          readOnly: true
        - name: rabbitmq-crt-volume
          mountPath: /etc/pki/rabbitmq/crt
          readOnly: true
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - api
        from:
          kind: ImageStreamTag
          name: fmn:latest
    - type: ConfigChange
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: consumer
  labels:
    app: fmn
spec:
  # There can be as many as necessary
  replicas: 1
  selector:
    app: fmn
    deploymentconfig: consumer
  strategy:
    # TODO: not rolling
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fmn
        deploymentconfig: consumer
    spec:
      containers:
        - name: consumer
          imagePullPolicy: Always
          volumeMounts:
            - name: etc-fmn
              mountPath: "/etc/fmn"
              readOnly: true
            - name: rabbitmq-ca-volume
              mountPath: /etc/pki/rabbitmq/ca
              readOnly: true
            - name: rabbitmq-key-volume
              mountPath: /etc/pki/rabbitmq/key
              readOnly: true
            - name: rabbitmq-crt-volume
              mountPath: /etc/pki/rabbitmq/crt
              readOnly: true
          env:
            - name: APP_SCRIPT
              value: ".s2i/run-consumer.sh"
      volumes:
        - name: etc-fmn
          configMap:
            name: fmn-config
        - name: rabbitmq-ca-volume
          mountPath: /etc/pki/rabbitmq/ca
          readOnly: true
        - name: rabbitmq-key-volume
          mountPath: /etc/pki/rabbitmq/key
          readOnly: true
        - name: rabbitmq-crt-volume
          mountPath: /etc/pki/rabbitmq/crt
          readOnly: true
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - consumer
        from:
          kind: ImageStreamTag
          name: fmn:latest
    - type: ConfigChange
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: sender-email
  labels:
    app: fmn
spec:
  # For IRC there can be only one. For email there can be many.
  replicas: 1
  selector:
    app: fmn
    deploymentconfig: sender-email
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fmn
        deploymentconfig: sender-email
    spec:
      containers:
        - name: sender-email
          imagePullPolicy: Always
          volumeMounts:
            - name: etc-fmn
              mountPath: "/etc/fmn"
              readOnly: true
            - name: rabbitmq-ca-volume
              mountPath: /etc/pki/rabbitmq/ca
              readOnly: true
            - name: rabbitmq-key-volume
              mountPath: /etc/pki/rabbitmq/key
              readOnly: true
            - name: rabbitmq-crt-volume
              mountPath: /etc/pki/rabbitmq/crt
              readOnly: true
          env:
            - name: APP_SCRIPT
              value: ".s2i/run-sender-email.sh"
      volumes:
        - name: etc-fmn
          configMap:
            name: fmn-config
        - name: rabbitmq-ca-volume
          mountPath: /etc/pki/rabbitmq/ca
          readOnly: true
        - name: rabbitmq-key-volume
          mountPath: /etc/pki/rabbitmq/key
          readOnly: true
        - name: rabbitmq-crt-volume
          mountPath: /etc/pki/rabbitmq/crt
          readOnly: true
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - sender-email
        from:
          kind: ImageStreamTag
          name: fmn:latest
    - type: ConfigChange
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: fmn
    service: sendria
  name: sendria
spec:
  replicas: 1
  selector:
    app: fmn
    deploymentconfig: sendria
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: fmn
        deploymentconfig: sendria
    spec:
      containers:
      - name: sendria
        image: sendria:latest
        ports:
        - containerPort: 1025
        - containerPort: 1080
        resources: {}
        readinessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          httpGet:
            path: /
            port: 1080
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 40
          httpGet:
            path: /
            port: 1080
  triggers:
  - type: ConfigChange
  - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - sendria
        from:
          kind: ImageStreamTag
          name: sendria:latest
