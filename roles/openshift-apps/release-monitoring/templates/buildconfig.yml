apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: release-monitoring-web-build
    name: release-monitoring-web-build
  spec:
    runPolicy: Serial
    source:
      dockerfile: |-
{% if env == 'staging' %}
        FROM fedora:36
{% else %}
        FROM fedora:32
{% endif %}
        LABEL \
          name="release-monitoring-web" \
          vendor="Fedora Infrastructure" \
          license="MIT"
        RUN dnf install -y \
                git \
                httpd \
                graphviz \
                fedora-messaging \
                python3-alembic \
{% if env == 'staging' %}
                python3-beautifulsoup4 \
{% endif %}
                python3-arrow \
                python3-dateutil \
                python3-defusedxml \
                python3-flask-login \
                python3-flask-restful \
                python3-flask-wtf \
                python3-jinja2 \
                python3-mod_wsgi \
                python3-ordered-set \
                python3-pip \
                python3-psycopg2 \
{% if env == 'staging' %}
                python3-semver \
{% else %}
                python3-pytoml \
                python3-semver \
                python3-social-auth-app-flask \
                python3-social-auth-app-flask-sqlalchemy \
{% endif %}
                python3-sphinxcontrib-httpdomain \
                python3-sqlalchemy \
                python3-sqlalchemy_schemadisplay \
                python3-sseclient \
                python3-straight-plugin \
{% if env == 'staging' %}
                python3-toml \
{% endif %}
                python3-wtforms && \
            dnf autoremove -y && \
            dnf clean all -y
        RUN git clone https://github.com/fedora-infra/anitya.git && \
                pushd anitya && \
{% if env == 'staging' %}
                git checkout staging && \
{% else %}
                git checkout production && \
{% endif %}
                python3 setup.py install && \
                pushd docs && \
                mkdir -p images && \
                python3 generate_db_schema && \
                sphinx-build-3 -b html . _build/html && \
                mkdir -p ../anitya/static/docs/ && \
                cp -r _build/html/* ../anitya/static/docs/ && \
                popd && \
                python3 setup.py install && \
                pip-3 install . && \
{% if env != 'staging' %}
                pushd anitya_schema && \
                pip-3 install . && \
                popd && \
{% endif %}
                popd && \
                rm -rf anitya
        # Let's use staging auth server in staging
{% if env == 'staging' %}
        RUN sed -i 's/id.fedoraproject.org/id.stg.fedoraproject.org/g' /usr/local/lib/python3.10/site-packages/social_auth_core-4.2.0-py3.10.egg/social_core/backends/fedora.py

        # Hotfix for social_auth-sqlalchemy
        # Could be removed when we switch to something else
        RUN sed -i 's/base64.encodestring/base64.encodebytes/g' /usr/local/lib/python3.10/site-packages/social_auth_storage_sqlalchemy-1.1.0-py3.10.egg/social_sqlalchemy/storage.py
{% endif %}
        RUN mkdir /httpdir
        RUN chmod 777 /httpdir
        EXPOSE 8080
        EXPOSE 9940
      type: Dockerfile
      git:
        uri: https://github.com/fedora-infra/anitya.git
{% if env == 'staging' %}
        ref: staging
{% else %}
        ref: production
{% endif %}
    strategy:
      type: Docker
      dockerStrategy:
        noCache: true
    output:
      to:
        kind: ImageStreamTag
        name: release-monitoring-web:latest
    triggers:
{% if stg_anitya_github_secret is defined and env == 'staging' %}
    - type: GitHub
      github:
        secret: "{{ stg_anitya_github_secret }}"
{% elif anitya_github_secret is defined and env == 'production' %}
    - type: GitHub
      github:
        secret: "{{ anitya_github_secret }}"
{% endif %}
    - type: ImageChange
kind: List
metadata: {}
