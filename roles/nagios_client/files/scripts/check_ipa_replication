#!/usr/bin/python 
# Source: https://github.com/opinkerfi/nagios-plugins/blob/master/check_ipa/check_ipa_replication
# Copyright 2013, Tomas Edwardsson 
# Copyright 2016, Patrick Uiterwijk
#
# This script is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This script is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import ldap, sys
import argparse
parser = argparse.ArgumentParser()
parser.add_argument('-u', help="ldap uri", dest="uri")
parser.add_argument('-D', help="bind DN", dest="binddn")
parser.add_argument('-w', help="bind password", dest="bindpw")
opt = parser.parse_args()

if not opt.uri:
    parser.error('-u (uri) argument is required')

try:
    l = ldap.initialize(opt.uri)

    if opt.binddn:
        l.bind_s(opt.binddn, opt.bindpw)

    replication = l.search_s('cn=config', 
        ldap.SCOPE_SUBTREE, 
        '(objectclass=nsds5replicationagreement)',
        ['nsDS5ReplicaHost', 'nsds5replicaLastUpdateStatus'])
except Exception as e:
    # critical 
    print(f"CRITICAL - Unable to initialize ldap connection: {e}")
    sys.exit(2)

# Loop through replication agreements
for rhost in replication:
    status = rhost[1]['nsds5replicaLastUpdateStatus'][0].decode('utf-8')
    code = status[:2]
    if status.startswith('Error ('):
        # IPA >=4.4.0
        code = status[status.find('(')+1:status.find(')')]
    else:
        # IPA <4.4.0
        code = status[:status.find(' ')]

    if code == '0':
        print(f"OK - Replica Status: {(rhost[1]['nsDS5ReplicaHost'][0], rhost[1]['nsds5replicaLastUpdateStatus'][0])}")
        sys.exit(0)
    elif code == '1':
        # Busy Replica is not an error, its "unknown" (but its "ok" for now)
        print(f"OK - Replica Status: {(rhost[1]['nsDS5ReplicaHost'][0], rhost[1]['nsds5replicaLastUpdateStatus'][0])}")
        sys.exit(0)
    else:
        sys.exit(2)

if not len(replication):
    print(f"Warning - No replicas found")
    sys.exit(1)

