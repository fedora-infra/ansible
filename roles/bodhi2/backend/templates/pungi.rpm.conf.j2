# Import shared settings from pungi_general.conf
from pungi_general import *
# Import multilib settings from pungi_multilib.conf
from pungi_multilib import *

# PRODUCT INFO
skip_phases = ["buildinstall", "extra_files"]
release_version = '[[ release.version ]]'
release_type = 'updates[% if request.name == 'testing' %]-testing[% endif %]'
old_composes_per_release_type = True
[% if release.id_prefix == 'FEDORA-EPEL' %]
[% if release.version == '8' or release.version == '9' %]
release_name = 'Fedora-Epel'
release_short = 'Fedora-Epel'
[% else %]
release_name = 'Fedora-EPEL'
release_short = 'Fedora-EPEL'
[% endif %]
[% else %]
release_name = '[[ release.id_prefix.title() ]]'
release_short = '[[ release.id_prefix.title() ]]'
[% endif %]

# GENERAL SETTINGS
comps_file = {
    'scm': 'git',
    'repo': 'https://pagure.io/fedora-comps.git',
    'branch': 'main', # defaults to cvs/HEAD or git/main
[% if release.id_prefix == 'FEDORA-EPEL' %]
    'file': 'comps-epel[[ release.version | int ]].xml',
[% else %]
    'file': 'comps-[[ release.branch ]].xml',
[% endif %]
    'command': 'make',
}
variants_file='variants.xml'
sigkeys = [
[% if release.version == '38' %]
    'eb10b464',
[% elif release.version == '39' %]
    '18B8e74c',
[% elif release.version == '40' %]
    'a15B79cc',
[% elif release.version == '41' %]
    'e99d6ad1',
[% elif release.version == '42' %]
    '105ef944',
[% elif release.version == '43' %]
    '31645531',
[% elif release.version == '6' %]
    '0608b895',
[% elif release.version == '7' %]
    '352C64E5',
[% elif release.version == '8' %]
    '2f86d6a1'
[% elif release.version == '9' %]
    '3228467c',
[% elif release.version == '10' or release.version.startswith('10.') %]
    'e37ed158',
[% endif %]
{% if env == "staging" %}
    None
{% endif %}
]
comps_filter_environments = False

# RUNROOT settings
runroot = True
runroot_channel = 'compose'
runroot_tag = 'f[[ release.version ]]-build'

# PKGSET
pkgset_koji_tag = '[[ id ]]'
pkgset_koji_inherit = False
pkgset_allow_reuse = False

# GATHER
gather_method = 'deps'
gather_backend = 'dnf'
check_deps = False
repoclosure_backend = 'dnf'

# CREATEREPO
[% if cr_config.drpms_enabled %]
createrepo_deltas = [
    ('^Everything$', {'*': True})
]
[% else %]
createrepo_deltas = [
    ('^Everything$', {'*': False})
]
[% endif %]

[% if cr_config.sqlite_enabled %]
createrepo_database = True
[% else %]
createrepo_database = False
[% endif %]

createrepo_extra_args = [
[% if cr_config.zchunk %]
    '--zck', '--zck-dict-dir=/usr/share/fedora-repo-zdicts/f[[ release.version ]]',
[% endif %]
[% if cr_config.repodata_comp %]
[% if cr_config.general_comp %]
    '--general-compress-type=[[ cr_config.repodata_comp ]]',
[% else %]
    '--compress-type=[[ cr_config.repodata_comp ]]',
[% endif %]
[% endif %]
[% if cr_config.compatibility %]
    '--compatibility',
[% endif %]
]

# CHECKSUMS
media_checksums = ['sha256']
media_checksum_one_file = True
media_checksum_base_filename = 'Fedora-%(variant)s-%(version)s-%(date)s.%(respin)s-%(arch)s'
#jigdo
create_jigdo = False

additional_packages = [
    ('^Everything$', {
        '*': [
            '*',
            '*-debuginfo',
        ],
    }),
]
multilib = [
    ('^Everything$', {
        'x86_64': ['devel', 'runtime'],
         's390x': ['devel', 'runtime']
    })
]
filter_packages = []

createiso_skip = [
        ('^Everything$', {
            '*': True,
            'src': True
        }),
    ]

{# repo block used by every image #}
{% set repos = '[
                [% if request.name == "testing" %]
                    [# In the case of testing, also inject the last stable updates #]
                    "https://kojipkgs{env_suffix}.fedoraproject.org/compose/updates/f[[ release.version ]]-updates/compose/Everything/$basearch/os/",
                [% endif %]
                [% if release.version == "42" %]
                    [# For F42 the compose location is going to be under /compose/branched/ #]
                    "https://kojipkgs{env_suffix}.fedoraproject.org/compose/branched/latest-Fedora-[[ release.version ]]/compose/Everything/$basearch/os/"
                [% else %]
                    "https://kojipkgs{env_suffix}.fedoraproject.org/compose/[[ release.version ]]/latest-Fedora-[[ release.version ]]/compose/Everything/$basearch/os/"
                [% endif %]
            ]'.format(env_suffix=env_suffix) %}

[% if request.name == 'stable' %]
    [% set ostreeref = 'updates' %]
[% else %]
    [% set ostreeref = 'testing' %]
[% endif %]

{% if env != "staging" %}
[% if release.id_prefix == 'FEDORA' %]
ostree = {
    "^Silverblue$": {
        "version": "!VERSION_FROM_VERSION_DATE_RESPIN",
        "unified_core": True,
        "runroot_packages": ["selinux-policy-targeted"],
        [% if release.version_int >= 41 %]
        "treefile": "silverblue-ostree.yaml",
        [% else %]
        "treefile": "fedora-silverblue.yaml",
        [% endif %]
        "config_url": "https://pagure.io/workstation-ostree-config.git",
        "config_branch": "f[[ release.version ]]",
        "repo": {{ repos }},
        "ostree_repo": "/mnt/koji/compose/ostree/repo",
        "ostree_ref": "fedora/[[ release.version ]]/${basearch}/[[ ostreeref ]]/silverblue",
        "tag_ref": False,
        [% if release.version_int > 41 %]
        "arches": ["x86_64", "aarch64"],
        [% else %]
        "arches": ["x86_64", "ppc64le", "aarch64"],
        [% endif %]
        "failable": ['*']
    },
    "^Kinoite$": {
        "version": "!VERSION_FROM_VERSION_DATE_RESPIN",
        "unified_core": True,
        "runroot_packages": ["selinux-policy-targeted"],
        [% if release.version_int >= 41 %]
        "treefile": "kinoite-ostree.yaml",
        [% else %]
        "treefile": "fedora-kinoite.yaml",
        [% endif %]
        "config_url": "https://pagure.io/workstation-ostree-config.git",
        "config_branch": "f[[ release.version ]]",
        "repo": {{ repos }},
        "ostree_repo": "/mnt/koji/compose/ostree/repo",
        "ostree_ref": "fedora/[[ release.version ]]/${basearch}/[[ ostreeref ]]/kinoite",
        "tag_ref": False,
        [% if release.version_int > 41 %]
        "arches": ["x86_64", "aarch64"],
        [% else %]
        "arches": ["x86_64", "ppc64le", "aarch64"],
        [% endif %]
        "failable": ['*']
    },
    "^Sericea$": {
        "version": "!VERSION_FROM_VERSION_DATE_RESPIN",
        "unified_core": True,
        "runroot_packages": ["selinux-policy-targeted"],
        [% if release.version_int >= 41 %]
        "treefile": "sway-atomic-ostree.yaml",
        [% else %]
        "treefile": "fedora-sericea.yaml",
        [% endif %]
        "config_url": "https://pagure.io/workstation-ostree-config.git",
        "config_branch": "f[[ release.version ]]",
        "repo": {{ repos }},
        "ostree_repo": "/mnt/koji/compose/ostree/repo",
        "ostree_ref": "fedora/[[ release.version ]]/${basearch}/[[ ostreeref ]]/sericea",
        "tag_ref": False,
        "arches": ["x86_64", "aarch64"],
        "failable": ['*']
    },
    "^Onyx$": {
        "version": "!VERSION_FROM_VERSION_DATE_RESPIN",
        "unified_core": True,
        "runroot_packages": ["selinux-policy-targeted"],
        [% if release.version_int >= 41 %]
        "treefile": "budgie-atomic-ostree.yaml",
        [% else %]
        "treefile": "fedora-onyx.yaml",
        [% endif %]
        "config_url": "https://pagure.io/workstation-ostree-config.git",
        "config_branch": "f[[ release.version ]]",
        "repo": {{ repos }},
        "ostree_repo": "/mnt/koji/compose/ostree/repo",
        "ostree_ref": "fedora/[[ release.version ]]/${basearch}/[[ ostreeref ]]/onyx",
        "tag_ref": False,
        "arches": ["x86_64"],
        "failable": ['*']
    },
}
ostree_container = {
    "^Silverblue$": {
        "version": "!VERSION_FROM_VERSION_DATE_RESPIN",
        "config_url": "https://pagure.io/workstation-ostree-config.git",
        "config_branch": "f[[ release.version ]]",
        "repo": {{ repos }},
        [% if release.version_int >= 41 %]
        "treefile": "silverblue.yaml",
        [% else %]
        "treefile": "fedora-silverblue.yaml",
        [% endif %]
        [% if release.version_int > 41 %]
        "arches": ["x86_64", "aarch64"],
        [% else %]
        "arches": ["x86_64", "ppc64le", "aarch64"],
        [% endif %]
        "failable": ['*']
    },
    "^Kinoite$": {
        "version": "!VERSION_FROM_VERSION_DATE_RESPIN",
        "config_url": "https://pagure.io/workstation-ostree-config.git",
        "config_branch": "f[[ release.version ]]",
        "repo": {{ repos }},
        [% if release.version_int >= 41 %]
        "treefile": "kinoite.yaml",
        [% else %]
        "treefile": "fedora-kinoite.yaml",
        [% endif %]
        [% if release.version_int > 41 %]
        "arches": ["x86_64", "aarch64"],
        [% else %]
        "arches": ["x86_64", "ppc64le", "aarch64"],
        [% endif %]
        "failable": ['*']
    },
    "^Sericea$": {
        "version": "!VERSION_FROM_VERSION_DATE_RESPIN",
        "config_url": "https://pagure.io/workstation-ostree-config.git",
        "config_branch": "f[[ release.version ]]",
        "repo": {{ repos }},
        [% if release.version_int >= 41 %]
        "treefile": "sway-atomic.yaml",
        [% else %]
        "treefile": "fedora-sericea.yaml",
        [% endif %]
        "arches": ["x86_64", "aarch64"],
        "failable": ['*']
    },
    "^Onyx$": {
        "version": "!VERSION_FROM_VERSION_DATE_RESPIN",
        "config_url": "https://pagure.io/workstation-ostree-config.git",
        "config_branch": "f[[ release.version ]]",
        "repo": {{ repos }},
        [% if release.version_int >= 41 %]
        "treefile": "budgie-atomic.yaml",
        [% else %]
        "treefile": "fedora-onyx.yaml",
        [% endif %]
        "arches": ["x86_64"],
        "failable": ['*']
    },
}
[% endif %]

{% endif %}

translate_paths = [
   ('/mnt/koji/compose/', 'https://kojipkgs{{ env_suffix }}.fedoraproject.org/compose/'),
]
koji_profile = 'bodhi_koji'
link_type = 'hardlink-or-copy'
